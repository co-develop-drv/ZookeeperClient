/*
 * Copyright 2013 Chris Banes
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


group 'com.saaavsaaa'
//version '1.0-SNAPSHOT'
version '2.2-Release'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

// 配置所有子项目共有配置
subprojects {
    apply plugin: 'java'

    compileJava{
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        [compileJava]*.options*.encoding = 'UTF-8'
    }

    compileTestJava{
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
        [compileTestJava]*.options*.encoding = 'UTF-8'
    }

    // 仓库配置
    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'http://192.168.2.51:8081/nexus/content/repositories/thirdparty/'
        }
        maven {
            url 'http://192.168.2.51:8081/nexus/content/groups/public/'
        }
    }

    //    配置依赖包版本
    ext{
        ZVersion = '3.5.3-beta' // 3.3.0, 3.4.12
    }
    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.11'
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            //为Pom文件做数字签名
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            if (isReleaseBuild()){
                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2") {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
            } else {
                repository(url: "https://oss.sonatype.org/content/repositories/snapshots/") {
                    authentication(userName: NEXUS_USERNAME, password: NEXUS_PASSWORD)
                }
            }

            pom.project {
                name project.name.concat(".client")
                packaging 'jar'
                description 'client'
                url 'https://github.com/saaavsaaa/ZookeeperClient'

                scm {
                    url 'scm:git@github.com:saaavsaaa/ZookeeperClient.git'
                    connection 'scm:git@github.com:saaavsaaa/ZookeeperClient.git'
                    developerConnection 'git@github.com:saaavsaaa/ZookeeperClient.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'saaav'
                        name 'lidb'
                    }
                }
            }

            pom.project {
                name project.name.concat(".util")
                packaging 'jar'
                description 'util'
                url 'https://github.com/saaavsaaa/ZookeeperClient'

                scm {
                    url 'scm:git@github.com:saaavsaaa/ZookeeperClient.git'
                    connection 'scm:git@github.com:saaavsaaa/ZookeeperClient.git'
                    developerConnection 'git@github.com:saaavsaaa/ZookeeperClient.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'saaav'
                        name 'lidb'
                    }
                }
            }
        }
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

def isReleaseBuild() {
    return version.contains("SNAPSHOT") == false
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

signing {
    sign configurations.archives
}

// https://issues.sonatype.org/browse/OSSRH-39239